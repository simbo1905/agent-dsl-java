name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  release:
    name: Release Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up JDK 24
      uses: actions/setup-java@v5
      with:
        java-version: 24
        distribution: 'oracle'
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
        gpg-passphrase: GPG_PASSPHRASE
        
    - name: Install mvnd
      run: |
        curl -fsSL https://github.com/apache/maven-mvnd/releases/download/1.0.2/maven-mvnd-1.0.2-linux-amd64.tar.gz | tar xz -C ~/.m2
        echo "$HOME/.m2/maven-mvnd-1.0.2-linux-amd64/bin" >> $GITHUB_PATH
        
    - name: Configure Git
      run: |
        git config user.name "Simon Massey"
        git config user.email "322608+simbo1905@users.noreply.github.com"
        
    - name: Build and verify
      run: |
        mvnd clean verify
        
    - name: Create release artifacts
      run: |
        mvnd package javadoc:jar source:jar
        
    - name: Generate changelog
      id: changelog
      uses: mikepenz/release-changelog-builder-action@v5
      with:
        configurationJson: |
          {
            "template": "## What's Changed\n\n#{{UNCATEGORIZED}}\n\n**Full Changelog**: #{{RELEASE_DIFF}}",
            "pr_template": "- #{{TITLE}} by @#{{AUTHOR}} in ##{{NUMBER}}",
            "categories": []
          }
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        body: ${{ steps.changelog.outputs.changelog }}
        files: |
          target/*.jar
          target/*-sources.jar
          target/*-javadoc.jar
        draft: false
        prerelease: ${{ contains(github.ref, '-RC') || contains(github.ref, '-beta') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Deploy to Maven Central
      if: ${{ !contains(github.ref, '-SNAPSHOT') }}
      run: |
        mvnd deploy -P release
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}